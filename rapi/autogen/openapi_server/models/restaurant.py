# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Restaurant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, location=None, cuisine_name=None, opening_hour=None, google_rating=None, tripadvisor_rating=None, michelin_star=None, address=None):  # noqa: E501
        """Restaurant - a model defined in OpenAPI

        :param id: The id of this Restaurant.  # noqa: E501
        :type id: int
        :param name: The name of this Restaurant.  # noqa: E501
        :type name: str
        :param location: The location of this Restaurant.  # noqa: E501
        :type location: List[float]
        :param cuisine_name: The cuisine_name of this Restaurant.  # noqa: E501
        :type cuisine_name: str
        :param opening_hour: The opening_hour of this Restaurant.  # noqa: E501
        :type opening_hour: str
        :param google_rating: The google_rating of this Restaurant.  # noqa: E501
        :type google_rating: float
        :param tripadvisor_rating: The tripadvisor_rating of this Restaurant.  # noqa: E501
        :type tripadvisor_rating: float
        :param michelin_star: The michelin_star of this Restaurant.  # noqa: E501
        :type michelin_star: int
        :param address: The address of this Restaurant.  # noqa: E501
        :type address: str
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'location': List[float],
            'cuisine_name': str,
            'opening_hour': str,
            'google_rating': float,
            'tripadvisor_rating': float,
            'michelin_star': int,
            'address': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'location': 'location',
            'cuisine_name': 'cuisine_name',
            'opening_hour': 'opening_hour',
            'google_rating': 'google_rating',
            'tripadvisor_rating': 'tripadvisor_rating',
            'michelin_star': 'michelin_star',
            'address': 'address'
        }

        self._id = id
        self._name = name
        self._location = location
        self._cuisine_name = cuisine_name
        self._opening_hour = opening_hour
        self._google_rating = google_rating
        self._tripadvisor_rating = tripadvisor_rating
        self._michelin_star = michelin_star
        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'Restaurant':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Restaurant of this Restaurant.  # noqa: E501
        :rtype: Restaurant
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Restaurant.


        :return: The id of this Restaurant.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Restaurant.


        :param id: The id of this Restaurant.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Restaurant.


        :return: The name of this Restaurant.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Restaurant.


        :param name: The name of this Restaurant.
        :type name: str
        """

        self._name = name

    @property
    def location(self):
        """Gets the location of this Restaurant.


        :return: The location of this Restaurant.
        :rtype: List[float]
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Restaurant.


        :param location: The location of this Restaurant.
        :type location: List[float]
        """

        self._location = location

    @property
    def cuisine_name(self):
        """Gets the cuisine_name of this Restaurant.


        :return: The cuisine_name of this Restaurant.
        :rtype: str
        """
        return self._cuisine_name

    @cuisine_name.setter
    def cuisine_name(self, cuisine_name):
        """Sets the cuisine_name of this Restaurant.


        :param cuisine_name: The cuisine_name of this Restaurant.
        :type cuisine_name: str
        """

        self._cuisine_name = cuisine_name

    @property
    def opening_hour(self):
        """Gets the opening_hour of this Restaurant.


        :return: The opening_hour of this Restaurant.
        :rtype: str
        """
        return self._opening_hour

    @opening_hour.setter
    def opening_hour(self, opening_hour):
        """Sets the opening_hour of this Restaurant.


        :param opening_hour: The opening_hour of this Restaurant.
        :type opening_hour: str
        """

        self._opening_hour = opening_hour

    @property
    def google_rating(self):
        """Gets the google_rating of this Restaurant.


        :return: The google_rating of this Restaurant.
        :rtype: float
        """
        return self._google_rating

    @google_rating.setter
    def google_rating(self, google_rating):
        """Sets the google_rating of this Restaurant.


        :param google_rating: The google_rating of this Restaurant.
        :type google_rating: float
        """

        self._google_rating = google_rating

    @property
    def tripadvisor_rating(self):
        """Gets the tripadvisor_rating of this Restaurant.


        :return: The tripadvisor_rating of this Restaurant.
        :rtype: float
        """
        return self._tripadvisor_rating

    @tripadvisor_rating.setter
    def tripadvisor_rating(self, tripadvisor_rating):
        """Sets the tripadvisor_rating of this Restaurant.


        :param tripadvisor_rating: The tripadvisor_rating of this Restaurant.
        :type tripadvisor_rating: float
        """

        self._tripadvisor_rating = tripadvisor_rating

    @property
    def michelin_star(self):
        """Gets the michelin_star of this Restaurant.


        :return: The michelin_star of this Restaurant.
        :rtype: int
        """
        return self._michelin_star

    @michelin_star.setter
    def michelin_star(self, michelin_star):
        """Sets the michelin_star of this Restaurant.


        :param michelin_star: The michelin_star of this Restaurant.
        :type michelin_star: int
        """

        self._michelin_star = michelin_star

    @property
    def address(self):
        """Gets the address of this Restaurant.


        :return: The address of this Restaurant.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Restaurant.


        :param address: The address of this Restaurant.
        :type address: str
        """

        self._address = address
